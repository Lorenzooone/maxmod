// SPDX-License-Identifier: ISC
//
// Copyright (c) 2008, Mukunda Johnson (mukunda@maxmod.org)

/****************************************************************************
 *                                                          __              *
 *                ____ ___  ____ __  ______ ___  ____  ____/ /              *
 *               / __ `__ \/ __ `/ |/ / __ `__ \/ __ \/ __  /               *
 *              / / / / / / /_/ />  </ / / / / / /_/ / /_/ /                *
 *             /_/ /_/ /_/\__,_/_/|_/_/ /_/ /_/\____/\__,_/                 *
 *                                                                          *
 *               Nintendo DS & Gameboy Advance Sound System                 *
 *                                                                          *
 ****************************************************************************/

/******************************************************************************
 *
 * Definitions
 *
 ******************************************************************************/

#include "mp_defs.inc"
#include "mp_mas.inc"
#include "mp_mas_structs.inc"
#include "mp_macros.inc"


/******************************************************************************
 *
 * Memory
 *
 ******************************************************************************/

	.BSS
	.ALIGN 2

/******************************************************************************
 * mmModuleCount
 *
 * Number of modules in soundbank
 ******************************************************************************/
					.global mmModuleCount
mmModuleCount:	.space 4

/******************************************************************************
 * mmModuleBank
 *
 * Address of module bank
 ******************************************************************************/
					.global mmModuleBank
mmModuleBank:	.space 4

/******************************************************************************
 * mmSampleBank
 *
 * Address of sample bank
 ******************************************************************************/
					.global mmSampleBank
mmSampleBank:	.space 4

/******************************************************************************
 * mm_vblank_function
 *
 * Pointer to a user function to be called during the vblank irq
 ******************************************************************************/
					.global mm_vblank_function
mm_vblank_function:	.space 4

/******************************************************************************
 * mmInitialized
 *
 * Variable that will be 'true' if we are ready for playback
 ******************************************************************************/
					.global mmInitialized
mmInitialized:		.space 1

/******************************************************************************
 *
 * Memory
 *
 ******************************************************************************/

	.BSS
	.ALIGN 2

/******************************************************************************
 * mmCallback
 *
 * Function pointer to user event handler
 ******************************************************************************/
					.global mmCallback
mmCallback:	.space 4

/******************************************************************************
 * mm_ch_mask
 *
 * Bitmask to select which hardware/software channels can be used
 ******************************************************************************/
					.global mm_ch_mask
mm_ch_mask:	.space 4

/******************************************************************************
 *
 * Program
 *
 ******************************************************************************/




/******************************************************************************
 * mpp_call_*
 *
 * Functions to branch to a register
 ******************************************************************************/

//-----------------------------------------------------------------------------
	.TEXT
	.THUMB
	.ALIGN 2
//-----------------------------------------------------------------------------

.global mpp_call_r7, mpp_call_r1, mpp_call_r2, mpp_call_r3

	.thumb_func
@------------------------------------------------------------------------------
mpp_call_r7: bx r7
@------------------------------------------------------------------------------

	.thumb_func
@------------------------------------------------------------------------------
mpp_call_r1: bx r1
@------------------------------------------------------------------------------

	.thumb_func
@------------------------------------------------------------------------------
mpp_call_r2: bx r2
@------------------------------------------------------------------------------
	
	.thumb_func
@------------------------------------------------------------------------------
mpp_call_r3: bx r3
@------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
.end
//-----------------------------------------------------------------------------

